#!/usr/bin/env Python3
#Goal: create a "FASTA parser" that pulls individual sequences from a FASTA file and stores them as individual components. Do this using a dictionary with the key being the header, the value being the sequence. Use Regular Expressions

import re

#open file 
with open("Python_07.fasta") as raw:
	#read file and define new variable
	fasta_string=''  #define new empty string}
	for line in raw:     #read in the file, line by line
		if re.search(r">(\w+.+)", line): #determine if it is a header. If so, do NOT apply .rstrip
			fasta_string=fasta_string+line  #add to list
		else:
			line=line.rstrip()								#if it is NOT a header, .rstrip to remove /n
			fasta_string=fasta_string+line		 #convert to string 
	
	#uses a for loop with finditer and .group to separate header and sequencer	
	FASTAdict={}
	for element in re.finditer(r">(\w+.+)\n(\w+)", fasta_string):
		FASTAdict[element.group(1)]=element.group(2)
	
	print(FASTAdict)


